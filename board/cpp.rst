************************************************************************************************************************
C++
************************************************************************************************************************

========================================================================================================================
题型及时间
========================================================================================================================

------------------------------------------------------------------------------------------------------------------------
计软智
------------------------------------------------------------------------------------------------------------------------

全英试卷, 中文作答. 看不懂可以问监考老师, 有的强制要求会用中文给出.

:ref:`回忆题目和部分解答参考点此进入 <main>`

2021 年及以前 (2 小时笔试)
  - 5 道编程题

2022 年 (2 小时笔试)
  - 2 道补充程序题
  - 4 道编程题

2023 年
  - 50 分钟笔试: 5 道读程序题、2 道补充程序题.
  - 休息 10 分钟.
  - 70 分钟机试: 2 道编程题 (给出要求写程序和给出部分代码补全程序).

大多数机房已安装 VS 2017, 但 2023 年时存在部分考试机房 (推测是 5 楼机房) 只安装了 VS 2010 的情况.

------------------------------------------------------------------------------------------------------------------------
网安
------------------------------------------------------------------------------------------------------------------------

2 小时笔试, 中文试卷, 中文作答. 能否使用铅笔直接作答等问题请现场询问监考老师.

2022 年
  - 5 道读程序题
  - 1 道补全程序题
  - 3 道编程题
  - 3 道简答题

2023 年
  - 5 道读程序题 (8 分/题)
  - 1 道补全程序题 (5 空, 2 分/空)
  - 2 道编程题

    - 1 道 10 分题
    - 1 道 20 分题

  - 2 道简答题 (10 分/题)

========================================================================================================================
考试范围
========================================================================================================================

计算机大类 C++ 教学大纲, 群文件内有 (群文件内其他资料中给出的考试范围都是猜测, 以教学大纲中内容为准).

- 计软智: 《C++大学教程（第9版）》第 1 章至第 8 章
- 网安: 《C++大学教程（第9版）》第 1 章至第 12 章

.. hint::

  一般不考过难的数据结构或算法, 我的意思是, 别着重刷力扣洛谷.

========================================================================================================================
学习建议、资料
========================================================================================================================

为避免重复已经迁移到其他地方, :ref:`点击查看 <question_board:cpp>`!!!

为避免重复已经迁移到其他地方, :ref:`点击查看 <question_board:cpp>`!!!

为避免重复已经迁移到其他地方, :ref:`点击查看 <question_board:cpp>`!!!

.. admonition:: 建议的学习范围
  :class: dropdown

  - 课内必修

    - C++98/03 (即应试网课、教材所教授的版本)
    - 淡化指针 (很多地方都能用引用代替)
    - :cpp:`std::string` 基本用法.
    - :cpp:`std::vector<Type>` 基本用法.

  - 可选

    - :cpp:`std::stringstream`: 用于数字和字符串间的转换和分割单词等. 可用于 2023 年计软智转专业上机第 1 题, 秒杀 2022 年网安转专业编写程序题第 1 题.
    - STL 容器基本用法

      - :cpp:`std::vector<Type>`: 动态数组, 且无需手动管理内存.
      - :cpp:`std::array<Type, size>`: 固定长度的数组, 且不会隐式类型转换为首元素的指针.
      - :cpp:`std::map<Key, Value>`: 关联数组. 可秒杀 2021 年计软智转专业第 3 题.
      - :cpp:`std::set<Key>`: 元素唯一且自动排序. 2020 年计软智转专业第 4 题和 2023 年计软智转专业上机第 2 题均考了此概念.

    - STL 算法 + Lambdas
    - C++11 的基于范围的 for 循环 + auto 基本用法

      .. code-block:: cpp
        :linenos:

        // auto: 我不在乎 array 里的元素 value 类型具体是什么, 编译器你自己搞定, 我只要求你把它按 const& 传给 value
        for (const auto& value : array) {
          std::cout << value << ' ';
        }

========================================================================================================================
习题参考
========================================================================================================================

《C++ 大学教程，第 9 版》课后习题
  无论计软智还是网安, 近几年出题都有《C++ 大学教程，第 9 版》, 尤其是选入《程序设计基础及语言》实验指导手册上的原题 (见群文件【2】转系复习资料), 不过占比不大, 而且题目的难度曲线很乱, 自行斟酌.

《程序设计基础及语言》实验指导手册
  建议在学完所有内容后再做, 里面有很多未纠正的错题, 容易误导初学者.

《C++ Primer Plus》课后习题
  主要是语法的练习.

:ref:`往年回忆题 <main>`
  计软智的回忆题、网安的回忆/模拟题除简答题部分都可用于练习.

力扣、洛谷简单、中等题
  稍微写一些, 或者读一些题解理解一下应该就行. 主要可以侧重于排序、递归、链表的基本实现、栈的基本操作、队列的基本操作 (、动态规划).

========================================================================================================================
遇到问题?
========================================================================================================================

在群里直接问一般会答, 也可以加 C++ 答疑群 682132891.

:ref:`C++ 常见问题解答 <question_board:faq>`
