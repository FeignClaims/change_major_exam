Implement a class called :cpp:`Polynomial`, which holds a polynomial (eg. :math:`ax^2 + bx^1`), and satisfies the following invariants,

- No similar term.

  - Users shouldn't observe similar terms in the polynomial. That is, :math:`3 + 3x^2 + 5 + 2x^2` should be observed as :math:`8 + 5x^2`.

- Sorted by ascending power order.

  - Users should observe an ascendingly sorted polynomial. That is, :math:`2x^2 + 3 + x` should be observed as :math:`3 + x + 2x^2`.

- For terms with 0 as coefficient, the observable state shows as if the term dosen't exsit. That is, :math:`0x^2 + x^3` should be observed as :math:`x^3`.

You should implement the following functions for it,

- :cpp:`auto operator+=(Polynomial const& other) -> Polynomial&`

  - Add :cpp:`*this` and :cpp:`other`, store the result in :cpp:`*this`.

- :cpp:`friend auto operator+(Polynomial const& lhs, Polynomial const& rhs) -> Polynomial`

  - Add :cpp:`lhs` and :cpp:`rhs`, store the result in a new :cpp:`Polynomial`.

- :cpp:`friend auto operator<<(std::ostream& ostream, Polynomial const& polynomial) -> std::ostream&`

  - Output the polynomial with the format :code:`3 + 5x^2 + 1x^3 + 1x^5`.

After that, write a main function to test all your public functions.

.. admonition:: 翻译
  :class: dropdown, translation

  实现一个类 :cpp:`Polynomial`, 它包含一个多项式 (如 :math:`ax^2 + bx^1`), 并且满足一下不变式.

  - 无同类项.

    - 用户不应该在该多项式中观察到同类项. 即, :math:`3 + 3x^2 + 5 + 2x^2` 应该被观察为 :math:`8 + 5x^2`.

  - 按次幂升序排序.

    - 用户应该观察到一个升序的有序多项式. 即, :math:`2x^2 + 3 + x` 应该被观察为 :math:`3 + x + 2x^2`.

  - 对于系数是 0 的项, 观察结果就好像该项不存在一样. 即, :math:`0x^2 + x^3` 应该被观察为 :math:`x^3`.

  你应该为它实现以下函数.

  - :cpp:`auto operator+=(Polynomial const& other) -> Polynomial&`

    - :cpp:`*this` 和 :cpp:`other` 求和, 结果存储在 :cpp:`*this` 中.

  - :cpp:`friend auto operator+(Polynomial const& lhs, Polynomial const& rhs) -> Polynomial`

    - :cpp:`lhs` 和 :cpp:`rhs` 求和, 结果存储在新的 :cpp:`Polynomial` 中.

  - :cpp:`friend auto operator<<(std::ostream& ostream, Polynomial const& polynomial) -> std::ostream&`

    - 按 :cpp:`3 + 5x^2 + 1x^3 + 1x^5` 的格式输出多项式.

  在那之后, 编写一个 main 函数来测试你所有的公用函数.
